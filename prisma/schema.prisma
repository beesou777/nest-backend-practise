generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL") // PostgreSQL connection URL
}

model User {
  id          Int       @id @default(autoincrement())
  email       String    @unique
  password    String
  name        String
  phone       String?
  isVerified  Boolean   @default(false)
  role        UserRole  // Organizer or Attendee
  companyName String?   // Nullable for attendees
  events      Event[]   @relation("EventOrganizer")
  savedEvents SavedEvent[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  feedback    Feedback[]
  resetPasswordToken ResetPasswordToken?
  isUserBlocked Boolean @default(false)
  blockedAt    DateTime?
  failedAttempts Int @default(0)
}

enum UserRole {
  ORGANIZER
  ATTENDEE
}

model ResetPasswordToken {
  id        Int     @id @default(autoincrement())
  token     String  @unique
  user      User    @relation(fields: [userId], references: [id])
  expiresAt DateTime
  userId    Int     @unique
  isValid   Boolean @default(true)
}


model Event {
  id          Int        @id @default(autoincrement())
  name        String
  description String
  date        DateTime
  time        String
  venue       String
  organizer   User       @relation("EventOrganizer", fields: [organizerId], references: [id])
  organizerId Int
  category    Category   @relation(fields: [categoryId], references: [id])
  categoryId  Int
  location    Location   @relation(fields: [locationId], references: [id])
  locationId  Int
  attendees   SavedEvent[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  feedback    Feedback[]
}

model Category {
  id        Int     @id @default(autoincrement())
  name      String  @unique
  events    Event[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Location {
  id        Int      @id @default(autoincrement())
  city      String
  state     String
  country   String
  postalCode String
  lat       Decimal
  lng       Decimal
  events    Event[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model SavedEvent {
  id        Int      @id @default(autoincrement())
  userId    Int
  eventId   Int
  user      User     @relation(fields: [userId], references: [id])
  event     Event    @relation(fields: [eventId], references: [id])
  createdAt DateTime @default(now())
}

model Feedback {
  id        Int      @id @default(autoincrement())
  userId    Int
  eventId   Int
  user      User     @relation(fields: [userId], references: [id])
  event     Event    @relation(fields: [eventId], references: [id])
  rating    Int      // Rating scale (1-5)
  comment   String?
  createdAt DateTime @default(now())

}